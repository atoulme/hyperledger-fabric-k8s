{{- if .Values.orderer.launchPods }}
{{- range $i, $org := $.Values.OrdererOrgs }}
{{- range $i, $host := $org.Specs }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hlf-orderer--{{ $org.Name | lower }}--{{ $host.Hostname | lower }}
spec:
  replicas: {{ $.Values.orderer.replicas }}
  podManagementPolicy: Parallel
  serviceName: hlf-orderer--{{ $org.Name | lower }}--{{ $host.Hostname | lower }}
  selector:
    matchLabels:
      app: hlf-orderer--{{ $org.Name | lower }}--{{ $host.Hostname | lower }}
  volumeClaimTemplates:
  {{- if $.Values.orderer.persistence.enabled }}
  - metadata:
      name: orderer-disk
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ $.Values.orderer.persistence.size }}
  {{- end }}
  template:
    metadata:
      labels:
        name: hlf-orderer
        org: hlf-orderer--{{ $org.Name | lower }}
        app: hlf-orderer--{{ $org.Name | lower }}--{{ $host.Hostname | lower }}
    spec:
      volumes:
        {{- if not $.Values.orderer.persistence.enabled }}
      - name: orderer-disk
        emptyDir: {}
        {{- end }}
      - name: orderer-tls
        secret:
          secretName: hlf-orderer--{{ $org.Name | lower }}--{{ $host.Hostname | lower }}-tls
      - name: orderer-msp
        secret:
          secretName: hlf-orderer--{{ $org.Name | lower }}--{{ $host.Hostname | lower }}-msp
          items:
          - key: config.yaml
            path: config.yaml
          - key: cert.pem
            path: signcerts/cert.pem
          - key: key.pem
            path: keystore/key.pem
          - key: cacert.pem
            path: cacerts/ca.{{ $org.Domain }}-cert.pem
          - key: admincert.pem
            path: admincerts/cert.pem
      - name: genesis
        secret:
          secretName: hlf-genesis.block

      {{- if $.Values.hostAliases }}
      hostAliases:
      {{- range $i, $alias := $.Values.hostAliases }}
      - ip: {{ $alias.ip }}
        hostnames: {{ $alias.hostnames }}
      {{- end }}
      {{- end }}{{""}}

      containers:

      # Orderer container
      - name: orderer
        image: hyperledger/fabric-orderer:{{ $.Values.hyperledgerVersion }}
        command: ["sh", "-c", "orderer"]

        volumeMounts:
        - mountPath: /var/hyperledger/production/orderer/
          name: orderer-disk
        - mountPath: /var/hyperledger/orderer/tls/
          name: orderer-tls
        - mountPath: /var/hyperledger/orderer/msp/
          name: orderer-msp
        - mountPath: /var/hyperledger/orderer/
          name: genesis
        
        env:
        # TODO move configurable ones to configmaps
        - name: FABRIC_LOGGING_SPEC
          value: {{ $.Values.orderer.logLevel }}
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: 0.0.0.0
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_GENESISFILE
          value: /var/hyperledger/orderer/genesis.block
        - name: ORDERER_GENERAL_LOCALMSPID
          value: {{ $org.Name }}MSP
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /var/hyperledger/orderer/msp
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: {{ $.Values.tlsEnabled | quote }}
        - name: ORDERER_GENERAL_TLS_PRIVATEKEY
          value: /var/hyperledger/orderer/tls/server.key
        - name: ORDERER_GENERAL_TLS_CERTIFICATE
          value: /var/hyperledger/orderer/tls/server.crt
        - name: ORDERER_GENERAL_TLS_ROOTCAS
          value: /var/hyperledger/orderer/tls/ca.crt

        - name: ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY
          value: /var/hyperledger/orderer/tls/server.key
        - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
          value: /var/hyperledger/orderer/tls/server.crt

        # Raft cluster configuration 
        {{- if $.Values.orderer.cluster.enabled }}
        - name: ORDERER_GENERAL_CLUSTER_SERVERPRIVATEKEY
          value: /var/hyperledger/orderer/tls/server.key
        - name: ORDERER_GENERAL_CLUSTER_SERVERCERTIFICATE
          value: /var/hyperledger/orderer/tls/server.crt
        - name: ORDERER_GENERAL_CLUSTER_LISTENPORT
          value: {{ $.Values.orderer.cluster.port | quote }}
        - name: ORDERER_GENERAL_CLUSTER_LISTENADDRESS
          value: 0.0.0.0
        {{- end }}

        # Operations configuration 
        {{- if $.Values.orderer.operations.enabled }}
        - name: ORDERER_OPERATIONS_LISTENADDRESS
          value: {{ $.Values.orderer.operations.listenAddress }}
        - name: ORDERER_OPERATIONS_TLS_ENABLED
          value: {{ $.Values.orderer.operations.tls.enabled | quote }}
        {{- end }}

        {{- if $.Values.metrics.orderer.enabled }}
        - name: ORDERER_METRICS_PROVIDER
          value: {{ $.Values.metrics.orderer.provider }}
        {{- if eq $.Values.metrics.orderer.provider "statsd" }}
        - name: ORDERER_METRICS_STATSD_NETWORK
          value: {{ $.Values.metrics.orderer.statsd.network }}
        - name: ORDERER_METRICS_STATSD_ADDRESS
          value: {{ $.Values.metrics.orderer.statsd.address }}
        - name: ORDERER_METRICS_STATSD_PREFIX
          value: {{ $org.Name | lower }}--{{ $host.Hostname | lower }}
        - name: ORDERER_METRICS_STATSD_WRITE_INTERVAL
          value: {{ $.Values.metrics.orderer.statsd.writeInterval }}
        {{- end }} # End statsD section
        {{- end }}

        - name: HFC_LOGGING
          value: '{"info":"console"}'
        - name: GRPC_VERBOSITY
          value: ERROR
        - name: GRPC_TRACE
          value:  all
        # - name: GODEBUG
        #   value: http2debug=2

---
{{- end }} {{- /* org.Specs */ -}}
{{- end }} {{- /* Orgs */ -}}
{{- end }} {{- /* if launchPods */ -}}